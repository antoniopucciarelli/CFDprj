FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}

application       simpleFoam;

startFrom         startTime;

startTime         0;

stopAt            endTime;

endTime           2000;

deltaT            1;

writeControl      timeStep;

writeInterval     100;

purgeWrite        0;

writeFormat       ascii;

writePrecision    6;

writeCompression  off;

timeFormat        general;

timePrecision     6;

runTimeModifiable true;

functions
{
    #includeFunc patchAverage(patch=inlet, fields=(p, U))
    #includeFunc residuals(p, U, k, epsilon)
 
    pInlet
    {
        type    surfaceFieldValue;
        enabled yes;
        log     yes;
        
        writeControl  timeStep;
        writeInterval 1;
        
        regionType  patch;
        writeFields no;
        name        inlet;
        operation   average;
        fields      (p);
        libs        ("libfieldFunctionObjects.so");
    }

    force
    {
        type    forces;
        enabled yes;
        libs    ("libforces.so");
        log     yes;
        patches (splitter back fuel_inlet);
        rho     rhoInf;
        rhoInf  1.18;

        writeControl  timeStep;
        writeInterval 1;

        liftDir (1 0 0);
        dragDir (0 1 0);
        CofR    (0 0 0);
    }
  
    axialLine
    {
        type              sets; 
        enabled            yes;
        writeControl  timeStep; 
        writeInterval      400;

        fields (p U);
        interpolationScheme cell;
        setFormat raw;

        sets
        (
            line
            {
                type      lineUniform;
                axis                x;
                nPoints           100;
                start (-0.12 0.1 0.0);
                end   ( 0.12 0.1 0.0);
            }
        );  
    }

    yPlus
    {
        // Mandatory entries
        type            yPlus;
        libs            ("fieldFunctionObjects");

        // Optional (inherited) entries
        writePrecision  10;
        writeToFile     true;
        useUserTime     true;

        //region          region0;
        enabled         true;
        log             true;
        timeStart       0;
        timeEnd         2000;
        executeControl  timeStep;
        executeInterval 1;
        writeControl    timeStep; //writeTime;
        writeInterval   100;
    }
    
    isoLine
    {
        type        surfaces; 
        enabled          yes; 
        writeControl timeStep; 
        writeInterval    400; 
        fields (p U MachNo);
        interpolationScheme cellPoint; 
        surfaceFormat vtk;         
    
        surfaces
        (
            pRef
            {
                type isoSurface; 
                isoField p;
                isoValues (0 100 150 200 250 300); 
                interpolate yes; 
            }
        );
    }
}
